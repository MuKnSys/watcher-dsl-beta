// This watcher is responsible for fetching the list of holders
// of an ERC20 token that have a balance greater than a specified amount.
// It imports the required contract interface and defines a request function
// to filter and fetch the holder list.

import contract ERC20.Call.balanceOf from "https://some-contract-url.example";
import { Config } from "./config";


type Holder = {
    address: string;
    balance: number;
};


type Holders = {
    holders: Holder[];
};


function filterHoldersByBalance(address: string, tokens: number): Holder | null {
    const balance = ERC20.at(Config.contractAddress).Call.balanceOf(address).get();


    if (balance > tokens) {
        const holder: Holder = { address, balance };
        return holder;
    }


    return null;
}


request getHoldersWithMoreThanX(tokens: number): Holders {
    const holdersAddresses = [
        "0x123...",
        "0x456...",
        // ... more addresses
    ];


    const resultHolders: Holder[] = holdersAddresses.map((address) => filterHoldersByBalance(address, tokens)).filter((holder) => holder !== null) as Holder[];


    respond({ holders: resultHolders });
}
